import re

DETAILS_URL = 'http://current.com/x/%s/context=slide'
THUMB_END = '_400x300.jpg'

####################################################################################################
def MetadataObjectForURL(url):

	content_id = re.search("/([0-9]+)_", url)
	if content_id:
		content_id = content_id.group(1)

		details_page = XML.ElementFromURL(DETAILS_URL % content_id)
		title = details_page.xpath("//contentTitle/text()")[0]
		description = details_page.xpath("//contentText/text()")[0]
		thumb = details_page.xpath("//thumbUrl/text()")[0] + THUMB_END
		date = details_page.xpath("//dateAdded/text()")[0]
		date = Datetime.ParseDate(date)

		return VideoClipObject(
			title = title,
			summary = description,
			thumb = thumb,
			originally_available_at = date
		)

	else:
		page = HTML.ElementFromURL(url)
		object = page.xpath('//object[contains(@class, "Brightcove")]')

		if len(object) > 0:
			playerID = object[0].xpath('./param[@name="playerID"]')[0].get('value')
			playerKey = object[0].xpath('./param[@name="playerKey"]')[0].get('value')
			videoPlayer = object[0].xpath('./param[@name="@videoPlayer"]')[0].get('value')

			return URLService.MetadataObjectForURL('helper://brightcove?playerID=%s&playerKey=%s&videoPlayer=%s' % (playerID, playerKey, videoPlayer))

####################################################################################################
def MediaObjectsForURL(url):

	content_id = re.search("/([0-9]+)_", url)
	if content_id:
		content_id = content_id.group(1)

		return [
			MediaObject(
				video_codec = VideoCodec.VP6,
				audio_codec = AudioCodec.MP3,
				container = 'flv',
				parts = [PartObject(key=Callback(PlayVideo, content_id = content_id))]
			)
		]

	else:
		page = HTML.ElementFromURL(url)
		object = page.xpath('//object[contains(@class, "Brightcove")]')

		if len(object) > 0:
			playerID = object[0].xpath('./param[@name="playerID"]')[0].get('value')
			playerKey = object[0].xpath('./param[@name="playerKey"]')[0].get('value')
			videoPlayer = object[0].xpath('./param[@name="@videoPlayer"]')[0].get('value')

			return URLService.MediaObjectsForURL('helper://brightcove?playerID=%s&playerKey=%s&videoPlayer=%s' % (playerID, playerKey, videoPlayer))

####################################################################################################
def PlayVideo(content_id):

	details_page = XML.ElementFromURL(DETAILS_URL % content_id)
	video_url = details_page.xpath("//assetUrl/text()")[0]
	return Redirect(video_url)

####################################################################################################
def TestURLs():
	test_urls = []
	page = HTML.ElementFromURL("http://current.com/")

	for link in page.xpath("//a[contains(@href, 'videos')]"):
		if len(test_urls) < 4:
			url = link.get('href')

			if url not in test_urls:
				test_urls.append(url)
		else:
			break

	return test_urls
